{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-16T17:25:18.984Z",
    "end": "2021-10-16T17:25:28.411Z",
    "duration": 9427,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f1971a70-a169-41e4-97be-7b0f2365964e",
      "title": "",
      "fullFile": "cypress/integration/cadastro.spec.js",
      "file": "cypress/integration/cadastro.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "539a07bb-8e56-4eb4-81bf-31825bc4d6d7",
          "title": "Cadastro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Quando eu informa os dados e finalizar, então o cadastro deve ser efetuado",
              "fullTitle": "Cadastro Quando eu informa os dados e finalizar, então o cadastro deve ser efetuado",
              "timedOut": null,
              "duration": 6460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://form-agilizei.netlify.app/'); //visitar site\n//Inputs de texto / textarea / emal -> utilizar type\n//utilizando o chance para preencher com valor alaetório\ncy.get('input[name=firstName]').type(chance.first());\ncy.get('input[name=lastName]').type(chance.last());\ncy.get('textarea[name=adress]').type(chance.address());\ncy.get('input[name=emailAdress]').type(chance.email()); // passando um valor no parâmetro\n// cy.get('input[name=firstName]').type('Agilizei')\n// cy.get('input[name=lastName]').type('Bootcamp')\n// cy.get('textarea[name=adress]').type('Sem endereço')\n// cy.get('input[name=emailAdress]').type('test@mail.com')\n//Inputs radio / checkboxes -> utilizar check\ncy.get('input[value=n]').check();\ncy.get('input[type=checkbox]').check('Netflix');\ncy.get('input[type=checkbox]').check('Dormir'); //Inputs do tipo combobox / select -> select\ncy.get('select#countries').select('Dinamarca', {\n  force: true\n}); //force true utiliza para forçar a execução do texte mesmo se elemento estiver coberto\ncy.get('select#years').select('2006', {\n  force: true\n});\ncy.get('select#months').select('Janeiro', {\n  force: true\n});\ncy.get('select#days').select('8', {\n  force: true\n}); //Inputs de senha / select -> type\ncy.get('input#firstpassword').type('Alunos@2021');\ncy.get('input#secondpassword').type('Alunos@2021'); // Inputs do tipo button\ncy.contains('Finalizar cadastro').click(); //espero que a minha aplicação seja direcionada para a listagem\n//url\n//deve estar / conter listagem\n//should contain listagem\ncy.url().should('contain', 'listagem'); //obtem a url atual que está a página\n//input[name=firstName]\n//input[name=lastName]\n//textarea[name=adress]\n//input[name=emailAdress]\n//input[value=n]\n//input[type=checkbox]\n//select#countries\n//select#years\n//select#months\n//select#days\n//input#firstpassword\n//input#secondpassword\n//*[@class=\"item-card card-desktop card-with-rating lazy-price item-desktop--3\"]\n//button#buy-button-now",
              "err": {},
              "uuid": "35b04826-0a9e-47d7-8731-6dd64e888f67",
              "parentUUID": "539a07bb-8e56-4eb4-81bf-31825bc4d6d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35b04826-0a9e-47d7-8731-6dd64e888f67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6460,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": true,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "mochawesome-report",
        "quiet": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}